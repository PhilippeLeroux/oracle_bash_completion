# bash completion support for srvctl 12cR1
# vim: ts=4:sw=4:filetype=sh

# Copyright (C) 2016 Philippe Leroux <philippe.lrx@gmail.com>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

#	=================================================================================
#	srvctl <command> <object> [<options>]

#	Pour m√©mo :
#		COMP_WORDS	is an array of words in the current command line.
#		COMP_CWORD	is the index of the current word in the command line.
#		COMPREPLY	is a list of replies.

#	Done :
#	status
#		srvctl status service -db <dbname> -service <srvname>
#		srvctl status database <-db <dbname>|-thishome|-thisversion <options>
#		srvctl status asm <options>
#		srvctl status diskgroup -diskgroup <dgname> <options>
#		srvctl status listener -listener <name>
#		srvctl status home -oraclehome <OH> -statefile
#		srvctl status ons
#	=================================================================================

function make_reply
{
	COMPREPLY=( $(compgen -W "$@" -- ${cur_word}) )
}

#	srvctl status service -db <dbname> -service [TAB]
function make_service_list
{
	# make cmd : srvctl status service -db <dbname>
	typeset	cmd
	for i in $( seq 0 $(( COMP_CWORD - 2 )) )
	do
		cmd="$cmd ${COMP_WORDS[i]}"
	done
	cmd="$cmd | sed 's/Service \(.*\) is running/\1/g' | xargs"

	make_reply "$(eval $cmd)"
}

# srvctl status diskgroup -diskgroup [TAB]
function make_diskgroup_list
{
	make_reply	"$(crsctl stat res		|\
					grep -E "ora.*.dg"	|\
					sed "s/NAME=ora.\(.*\).dg/\1/g" | xargs)"
}

# srvctl status listener -listener [TAB]
function make_listener_list
{
	make_reply	"$(crsctl stat res			|\
					grep -E "ora.*.lsnr"	|\
					sed "s/NAME=ora.\(.*\).lsnr/\1/g" | xargs)"
}

# srvctl status home -oraclehome [TAB]
function make_oracle_home_list
{
	make_reply	"$(cat /etc/oratab			|\
					grep -E "^(\+|[A-Z])"	|\
					sed "s/.*:\(.*\):[Y|N].*/\1/g" | xargs)"
}

function srvctl_complete
{
	typeset cur_word="${COMP_WORDS[COMP_CWORD]}"
	typeset prev_word="${COMP_WORDS[COMP_CWORD-1]}"

	typeset commands="enable disable start stop status add remove modify update getenv setenv unsetenv config upgrade downgrade"

	if [[ "$commands" == *"$prev_word"* ]]
	then	# srvctl <command> [TAB]
		make_reply "database service asm diskgroup listener home ons"
	else
		case "$prev_word" in
			srvctl)
				make_reply "${commands}"
				;;

			database)	# srvctl status database [TAB]
				make_reply "-database -thisversion -thishome"
				;;

			service)	# srvctl status service [TAB]
				COMPREPLY=( "-database" )
				;;

			asm)	# srvctl status asm [TAB]
				make_reply "-detail -verbose"
				;;

			diskgroup)	# srvctl status diskgroup [TAB]
				make_reply "-diskgroup -detail -verbose"
				;;

			listener)	# srvctl status listener [TAB]
				make_reply "-listener"
				;;

			home)	# srvctl status home [TAB]
				COMPREPLY=( "-oraclehome" )
				;;

			-thisversion|-thishome) # srvctl status database -thisversion|-thishome
				COMPREPLY=( "-verbose" )
				;;

			-listener)	# srvctl status listener -listener [TAB]
				make_listener_list
				;;

			-diskgroup)	# srvctl status diskgroup -diskgroup [TAB]
				make_diskgroup_list
				;;

			-database|-db)	# srvctl status <object> -db [TAB]
				make_reply "$(srvctl config database | xargs)"
				;;

			-service|-s) # srvctl status service -db <name> -service [TAB]
				make_service_list
				;;

			-oraclehome)	#srvctl status home -oraclehome [TAB]
				make_oracle_home_list
				;;

			*)
				case "${COMP_WORDS[COMP_CWORDS-4]}" in
					service)	# srvctl status service -db <name>  [TAB]
						COMPREPLY=( "-service" )
						;;

					database)	# srvctl status database -db <name>  [TAB]
						COMPREPLY=( "-verbose" )
						;;

					*)
						case "${COMP_WORDS[COMP_CWORDS-3]}" in
							-diskgroup)	# srvctl status diskgroup -diskgroup <diskgroup> [TAB]
								COMPREPLY=( "-detail" )
								;;

							-oraclehome) # srvctl status home -oraclehome <OH> [TAB]
								COMPREPLY=( "-statefile" )
								;;

							*)
								COMPREPLY=(  )
								;;
						esac
						;;
				esac
				;;
		esac
	fi

	return 0
}

# Register srvctl_complete to provide completion for the following commands
complete -F srvctl_complete srvctl
